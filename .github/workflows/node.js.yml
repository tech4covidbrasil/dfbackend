# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Instalando Dependencias
      run: npm install

    - name: Construindo Projeto (Build)
      run: npm run build

    - name: Gerando Artefato (Dist)
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist

  deploy:
    needs: build
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [16.x]

    steps:
    - name: Download Artefato
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist

    - name: Variaveis de Ambiente
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID}}
        AWS_REGION: ${{ secrets.AWS_REGION}}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
        BASE_URL: ${{ secrets.BASE_URL}}
        DATABASE_URL: ${{ secrets.DATABASE_URL}}
        EMAIL_DRIVER: ${{ secrets.EMAIL_DRIVER}}
        EXPIRESIN: ${{ secrets.EXPIRESIN}}
        JWT_EXPIRE: ${{ secrets.JWT_EXPIRE}}
        MAX_SIZE: ${{ secrets.MAX_SIZE}}
        PORT: ${{ secrets.PORT}}
        SALT: ${{ secrets.SALT}}
        SECRET: ${{ secrets.SECRET}}
        SESSIONSECRET: ${{ secrets.SESSIONSECRET}}
        SESSIONTIME: ${{ secrets.SESSIONTIME}}
    - run: npm ci
    - run: pm2 restart dfbapi
